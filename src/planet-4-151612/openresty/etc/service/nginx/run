#!/bin/bash
set -e

_good "$(printf "%-10s " "nginx:")" "server_name ${APP_HOSTNAME}"
_good "$(printf "%-10s " "nginx:")" "client_max_body_size=${UPLOAD_MAX_SIZE:-$DEFAULT_UPLOAD_MAX_SIZE}"

mkdir -p /etc/nginx/sites-enabled

nginx_configure_ssl.sh &

nginx_configure_pagespeed.sh &

nginx_configure_cloudflare.sh &

nginx_configure_fastcgi_backend.sh &

# Set worker_processes = num cpu cores
WORKER_PROCESSES=$(cat /proc/cpuinfo |grep processor | wc -l)
if [[ $WORKER_PROCESSES -gt ${OPENRESTY_MAX_WORKER_PROCESSES:-$DEFAULT_OPENRESTY_MAX_WORKER_PROCESSES} ]]; then
	# number of available processor cores exceeds the maximum permitted, limit to maximum
	_good "$(printf "%-10s " "nginx:")" "Using max ${OPENRESTY_MAX_WORKER_PROCESSES:-$DEFAULT_OPENRESTY_MAX_WORKER_PROCESSES} of $WORKER_PROCESSES available cores"
	WORKER_PROCESSES=${OPENRESTY_MAX_WORKER_PROCESSES:-$DEFAULT_OPENRESTY_MAX_WORKER_PROCESSES}
fi
_good "$(printf "%-10s " "nginx:")" "worker_processes=$WORKER_PROCESSES"
export WORKER_PROCESSES

wait # for background processes to finish

_title "Starting service: nginx v${OPENRESTY_VERSION:-${DEFAULT_OPENRESTY_VERSION}}"

exec dockerize \
	-template /app/templates/etc/nginx/sites-enabled/default.conf.tmpl:/etc/nginx/sites-enabled/default.conf \
	-template /app/templates/etc/nginx/sites-enabled/default-ssl.conf.tmpl:/etc/nginx/sites-enabled/default-ssl.conf \
	-template /app/templates/etc/nginx/nginx.conf.tmpl:/etc/nginx/nginx.conf \
	-stdout /var/log/nginx/access.log \
	-stderr /var/log/nginx/error.log \
	nginx
